{"ast":null,"code":"var _jsxFileName = \"/Users/dvas22/Desktop/David/www/development/code/node/tutorials/sam/fullStack/frontend/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, Button, Text, Input } from '@chakra-ui/react';\nimport useMutation from '../hooks/useMutation';\n\n//GLOBAL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validFileTypes = ['image/jpg', 'image/jpeg', 'image/png'];\nconst ErrorText = _ref => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"lg\",\n    color: \"red.300\",\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = ErrorText;\nconst URL = '/images';\n\n//COMPONENT\nconst Posts = () => {\n  _s();\n  const {\n    mutate: uploadImage,\n    isLoading: uploading,\n    error: uploadError\n  } = useMutation({\n    url: URL\n  });\n  const [error, setError] = useState('');\n\n  //Function: Upload Button\n  const handleUpload = async e => {\n    console.log(e);\n    const file = e.target.files[0];\n    if (!validFileTypes.find(type => type === file.type)) {\n      console.log(\"not the right type dude\");\n      setError('File must be in JPG/PNG format');\n      return;\n    }\n    const form = new FormData();\n    form.append('image', file);\n    await uploadImage(form);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 6,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"imageInput\",\n      type: \"file\",\n      hidden: true,\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      as: \"label\",\n      htmlFor: \"imageInput\",\n      colorScheme: \"blue\",\n      variant: \"outline\",\n      mb: 4,\n      cursor: \"pointer\",\n      isLoading: uploading,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !error && /*#__PURE__*/_jsxDEV(ErrorText, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(ErrorText, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"left\",\n      mb: 4,\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"/MV2yttcTFy2TiLgfideqYJOG88=\", false, function () {\n  return [useMutation];\n});\n_c2 = Posts;\nexport default Posts;\nvar _c, _c2;\n$RefreshReg$(_c, \"ErrorText\");\n$RefreshReg$(_c2, \"Posts\");","map":{"version":3,"names":["useState","Box","Button","Text","Input","useMutation","validFileTypes","ErrorText","children","props","URL","Posts","mutate","uploadImage","isLoading","uploading","error","uploadError","url","setError","handleUpload","e","console","log","file","target","files","find","type","form","FormData","append"],"sources":["/Users/dvas22/Desktop/David/www/development/code/node/tutorials/sam/fullStack/frontend/src/components/Posts.js"],"sourcesContent":["import { useState } from 'react';\nimport { Box, Button, Text, Input } from '@chakra-ui/react';\nimport useMutation from '../hooks/useMutation';\n\n//GLOBAL\nconst validFileTypes = ['image/jpg', 'image/jpeg', 'image/png'];\nconst ErrorText = ({ children, ...props }) => (\n  <Text fontSize=\"lg\" color=\"red.300\" {...props}>\n    {children}\n  </Text>\n);\nconst URL = '/images';\n\n\n//COMPONENT\nconst Posts = () => {\n  const { mutate: uploadImage, isLoading: uploading, error: uploadError } = useMutation({url: URL})\n  const [error, setError] = useState('');\n\n  //Function: Upload Button\n  const handleUpload = async e => {\n    console.log(e)\n    const file = e.target.files[0];\n    if (!validFileTypes.find(type => type === file.type)) {\n      console.log(\"not the right type dude\")\n \n      setError('File must be in JPG/PNG format');\n      return;\n    }\n\n    const form = new FormData();\n    form.append('image', file);\n    await uploadImage(form)\n\n  };\n\n\n  return (\n    <Box mt={6}>\n      <Input id=\"imageInput\" type=\"file\" hidden onChange={handleUpload} />\n      <Button\n        as=\"label\"\n        htmlFor=\"imageInput\"\n        colorScheme=\"blue\"\n        variant=\"outline\"\n        mb={4}\n        cursor=\"pointer\"\n        isLoading={uploading}\n      >\n        Upload\n      </Button>\n\n      {!error && <ErrorText>{error}</ErrorText>}\n      {uploadError && <ErrorText>{error}</ErrorText>}\n      \n      <Text textAlign=\"left\" mb={4}>\n        Posts\n      </Text>\n    </Box>\n  );\n};\nexport default Posts;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,kBAAkB;AAC3D,OAAOC,WAAW,MAAM,sBAAsB;;AAE9C;AAAA;AACA,MAAMC,cAAc,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC;AAC/D,MAAMC,SAAS,GAAG;EAAA,IAAC;IAAEC,QAAQ;IAAE,GAAGC;EAAM,CAAC;EAAA,oBACvC,QAAC,IAAI;IAAC,QAAQ,EAAC,IAAI;IAAC,KAAK,EAAC,SAAS;IAAA,GAAKA,KAAK;IAAA,UAC1CD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACJ;AAAA,CACR;AAAC,KAJID,SAAS;AAKf,MAAMG,GAAG,GAAG,SAAS;;AAGrB;AACA,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM;IAAEC,MAAM,EAAEC,WAAW;IAAEC,SAAS,EAAEC,SAAS;IAAEC,KAAK,EAAEC;EAAY,CAAC,GAAGZ,WAAW,CAAC;IAACa,GAAG,EAAER;EAAG,CAAC,CAAC;EACjG,MAAM,CAACM,KAAK,EAAEG,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMoB,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC9BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,MAAMG,IAAI,GAAGH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACpB,cAAc,CAACqB,IAAI,CAACC,IAAI,IAAIA,IAAI,KAAKJ,IAAI,CAACI,IAAI,CAAC,EAAE;MACpDN,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAEtCJ,QAAQ,CAAC,gCAAgC,CAAC;MAC1C;IACF;IAEA,MAAMU,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEP,IAAI,CAAC;IAC1B,MAAMX,WAAW,CAACgB,IAAI,CAAC;EAEzB,CAAC;EAGD,oBACE,QAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAA,wBACT,QAAC,KAAK;MAAC,EAAE,EAAC,YAAY;MAAC,IAAI,EAAC,MAAM;MAAC,MAAM;MAAC,QAAQ,EAAET;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACpE,QAAC,MAAM;MACL,EAAE,EAAC,OAAO;MACV,OAAO,EAAC,YAAY;MACpB,WAAW,EAAC,MAAM;MAClB,OAAO,EAAC,SAAS;MACjB,EAAE,EAAE,CAAE;MACN,MAAM,EAAC,SAAS;MAChB,SAAS,EAAEL,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGd,EAER,CAACC,KAAK,iBAAI,QAAC,SAAS;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAa,EACxCC,WAAW,iBAAI,QAAC,SAAS;MAAA,UAAED;IAAK;MAAA;MAAA;MAAA;IAAA,QAAa,eAE9C,QAAC,IAAI;MAAC,SAAS,EAAC,MAAM;MAAC,EAAE,EAAE,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEtB;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA7CIL,KAAK;EAAA,QACiEN,WAAW;AAAA;AAAA,MADjFM,KAAK;AA8CX,eAAeA,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}